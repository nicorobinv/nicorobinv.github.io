{"componentChunkName":"component---src-pages-search-tsx","path":"/search/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"rawMarkdownBody":"\r\n오늘의 느낀점..github에서 저장소 생성할시에 readme 파일 생성하는건 잘생각하고 하자...\r\n","excerpt":"오늘의 느낀점..github에서 저장소 생성할시에 readme 파일 생성하는건 잘생각하고 하자...","fields":{"slug":"/first-post/"},"frontmatter":{"date":"Aug 16, 2021","title":"Blog test","tags":["undefined"],"update":"Aug 16, 2021"}}},{"node":{"rawMarkdownBody":"\r\ngit push -u origin master : 로컬 레포지토리의 내용을 처음으로 리모트 레포지토리에 올릴 때 사용합니다.\r\ngit push : 로컬 레포지토리의 내용을 리모트 레포지토리에 보내기\r\ngit pull : 리모트 레포지토리의 내용을 로컬 레포지토리로 가져오기\r\ngit clone [프로젝트의 GitHub 상 주소] : GitHub에 있는 프로젝트를 내 컴퓨터로 가져오기\r\n","excerpt":"git push -u origin master : 로컬 레포지토리의 내용을 처음으로 리모트 레포지토리에 올릴 때 사용합니다.\ngit push : 로컬 레포지토리의 내용을 리모트 레포지토리에 보내기\ngit pull : 리모트 레포지토리의 내용을 로컬 …","fields":{"slug":"/Git-study_2/"},"frontmatter":{"date":"Aug 16, 2021","title":"GitHub 시작하기 정리 노트","tags":["undefined"],"update":"Aug 16, 2021"}}},{"node":{"rawMarkdownBody":"\r\ngit init : 현재 디렉토리를 Git이 관리하는 프로젝트 디렉토리(=working directory)로 설정하고 그 안에 레포지토리(.git 디렉토리) 생성\r\ngit config user.name 'codeit' : 현재 사용자의 아이디를 'codeit'으로 설정(커밋할 때 필요한 정보)\r\ngit config user.email 'teacher@codeit.kr' : 현재 사용자의 이메일 주소를 'teacher@codeit.kr'로 설정(커밋할 때 필요한 정보)\r\ngit add [파일 이름] : 수정사항이 있는 특정 파일을 staging area에 올리기\r\ngit add [디렉토리명] : 해당 디렉토리 내에서 수정사항이 있는 모든 파일들을 staging area에 올리기\r\ngit add . : working directory 내의 수정사항이 있는 모든 파일들을 staging area에 올리기\r\ngit reset [파일 이름] : staging area에 올렸던 파일 다시 내리기\r\ngit status : Git이 현재 인식하고 있는 프로젝트 관련 내용들 출력(문제 상황이 발생했을 때 현재 상태를 파악하기 위해 활용하면 좋음)\r\ngit commit -m \"커밋 메시지\" : 현재 staging area에 있는 것들 커밋으로 남기기\r\ngit help [커맨드 이름] : 사용법이 궁금한 Git 커맨드의 공식 메뉴얼 내용 출력\r\n","excerpt":"git init : 현재 디렉토리를 Git이 관리하는 프로젝트 디렉토리(=working directory)로 설정하고 그 안에 레포지토리(.git 디렉토리) 생성\ngit config user.name 'codeit' : 현재 사용자의 아이디를 'co…","fields":{"slug":"/Git-study_1/"},"frontmatter":{"date":"Aug 16, 2021","title":"Git 써보기 정리 노트","tags":["undefined"],"update":"Aug 16, 2021"}}},{"node":{"rawMarkdownBody":"\r\ngit log : 커밋 히스토리를 출력\r\ngit log --pretty=oneline : --pretty 옵션을 사용하면 커밋 히스토리를 다양한 방식으로 출력할 수 있습니다. --pretty 옵션에 oneline이라는 값을 주면 커밋 하나당 한 줄씩 출력해줍니다. --pretty 옵션에 대해 더 자세히 알고싶으면 이 링크를 참고하세요.\r\ngit show [커밋 아이디] : 특정 커밋에서 어떤 변경사항이 있었는지 확인\r\ngit commit --amend : 최신 커밋을 다시 수정해서 새로운 커밋으로 만듦\r\ngit config alias.[별명] [커맨드] : 길이가 긴 커맨드에 별명을 붙여서 이후로 별명으로 해당 커맨드를 실행할 수 있도록 설정\r\ngit diff [커밋 A의 아이디] [커밋 B의 아이디] : 두 커밋 간의 차이 비교\r\ngit reset [옵션] [커밋 아이디] : 옵션에 따라 하는 작업이 달라짐(옵션을 생략하면 --mixed 옵션이 적용됨)\r\n(1) HEAD가 특정 커밋을 가리키도록 이동시킴(--soft는 여기까지 수행)\r\n\r\n    \t(2) staging area도 특정 커밋처럼 리셋(--mixed는 여기까지 수행)\r\n\r\n    \t(3) working directory도 특정 커밋처럼 리셋(--hard는 여기까지 수행)\r\n\r\n    \t그리고 이때 커밋 아이디 대신 HEAD의 위치를 기준으로 한 표기법(예 : HEAD^, HEAD~3)을 사용해도 됨\r\n\r\ngit tag [태그 이름] [커밋 아이디] : 특정 커밋에 태그를 붙임\r\n","excerpt":"git log : 커밋 히스토리를 출력\ngit log --pretty=oneline : --pretty 옵션을 사용하면 커밋 히스토리를 다양한 방식으로 출력할 수 있습니다. --pretty 옵션에 oneline이라는 값을 주면 커밋 하나당 한 줄씩 …","fields":{"slug":"/Git-study_3/"},"frontmatter":{"date":"Aug 16, 2021","title":"commit 정리 노트","tags":["undefined"],"update":"Aug 16, 2021"}}},{"node":{"rawMarkdownBody":"\r\n게시물에 태그를 지정할 수 있습니다.\r\n\r\n해당 게시물의 Markdown YAML Front matter은 아래와 같습니다.\r\n\r\n```\r\n---\r\ntitle: Tag, 태그 게시물 예제\r\ndate: 2019-07-30\r\ntags:\r\n  - tag\r\n  - 태그\r\n---\r\n```\r\n\r\n가이드의 Markdown YAML Front matter를 참고하세요.\r\n\r\n자세한 가이드는 [Documents](<https://github.com/junhobaik/junhobaik.github.io/wiki/Document-(Borderless)>)를 확인해주세요.\r\n","excerpt":"게시물에 태그를 지정할 수 있습니다. 해당 게시물의 Markdown YAML Front matter은 아래와 같습니다. 가이드의 Markdown YAML Front matter를 참고하세요. 자세한 가이드는 Documents를 확인해주세요.","fields":{"slug":"/tag-post-example/"},"frontmatter":{"date":"Mar 24, 1991","title":"Tag, 태그 게시물 예제","tags":["tag","태그"],"update":"Jan 01, 0001"}}},{"node":{"rawMarkdownBody":"\r\n![](screenshot.png)\r\n\r\n이미지 파일이 첨부된 게시물의 예제입니다.\r\n\r\n폴더를 만들고 폴더의 제목이 해당 게시물의 주소가 됩니다.\r\n\r\n게시물 파일명은 index.md 로 합니다.\r\n\r\n이미지 파일은 폴더 내에 위치시킵니다.\r\n\r\n자세한 가이드는 [Documents](<https://github.com/junhobaik/junhobaik.github.io/wiki/Document-(Borderless)>)를 확인해주세요.\r\n","excerpt":"이미지 파일이 첨부된 게시물의 예제입니다. 폴더를 만들고 폴더의 제목이 해당 게시물의 주소가 됩니다. 게시물 파일명은 index.md 로 합니다. 이미지 파일은 폴더 내에 위치시킵니다. 자세한 가이드는 Documents를 확인해주세요.","fields":{"slug":"/image-post-example.md/"},"frontmatter":{"date":"Mar 24, 1991","title":"Image, 이미지 게시물 예제","tags":["undefined"],"update":"Jan 01, 0001"}}}]}},"pageContext":{}},"staticQueryHashes":["2027115977","694178885"]}